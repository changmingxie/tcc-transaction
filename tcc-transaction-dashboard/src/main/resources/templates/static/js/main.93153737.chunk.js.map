{"version":3,"sources":["serviceWorker.js","common/http.js","common/api.js","pages/tcc/login/index.jsx","pages/tcc/welcome/index.jsx","pages/tcc/domain/index.jsx","store/actions/domain.js","pages/tcc/transaction/SearchBox.jsx","common/constants.js","pages/tcc/transaction/TableCard.jsx","pages/tcc/transaction/index.jsx","pages/tcc/task/index.jsx","store/reducers/domain.js","store/index.js","layout/TccHeader.jsx","layout/TccLayout.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","http","axios","create","baseURL","timeout","interceptors","request","use","config","url","includes","tccToken","localStorage","getItem","headers","error","Error","response","console","log","errorMessage","businessResponse","data","status","code","message","Promise","reject","href","removeItem","base_url","split","goLogin","confirm","params","post","domain","xidString","reset","cancel","remove","restore","transactionDelete","Page","props","history","useState","loginLoading","setLoginLoading","Form","useForm","form","handleSubmit","a","validateFields","values","then","res","setItem","token","username","connectionMode","push","catch","className","spinning","size","delay","title","style","width","margin","hoverable","name","autoComplete","Item","rules","required","placeholder","prefix","UserOutlined","Password","LockOutlined","type","htmlType","onClick","block","page","fontSize","Option","Select","domainList","setDomainList","loadingStatus","setLoadingStatus","addDomainModalVisible","setAddDomainModalVisible","modifyDomainModalVisible","setModifyDomainModalVisible","waitModifyDomain","setWaitModifyDomain","modifyForm","showRender","text","record","length","shortText","String","substr","concat","placement","columns","key","dataIndex","render","fixed","showModifyDomainModal","onConfirm","alertTest","okText","cancelText","backgroundColor","borderColor","danger","doDeleteDomain","useEffect","reLoadDomainList","resetFields","get","doAddDomainConfirm","doModifyDomainConfirm","info","paddingBottom","paddingRight","span","rowKey","loading","dataSource","scroll","x","y","visible","getContainer","forceRender","closable","footer","labelCol","wrapperCol","label","initialValue","pattern","value","disabled","maxRetryCount","maxRecoveryRequestPerSecond","phoneNumbers","alertType","threshold","intervalMinutes","dingRobotUrl","Domain","SearchBox","domainData","useSelector","dispatch","useDispatch","layout","onFinish","payload","showSearch","map","val","idx","allowClear","dateRender","xidRender","newText","oInput","document","createElement","body","appendChild","select","execCommand","success","TableCard","activeTabKey","deleted","currentDomain","refresh","datasource","setdatasource","total","setTotal","setloadingStatus","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","rowSelection","onChange","initPagination","offset","pageSize","forward","pageInit","getListData","pagination","markDeleted","api","items","batchHandle","handle","warn","resultPromiseList","Array","i","all","resultList","sucCount","e","openTransactionDetail","detailContent","isJsonParseSuccess","JSON","parse","content","Modal","icon","InfoCircleOutlined","color","collapseStringsAfterLength","src","float","marginBottom","bordered","defaultPageSize","pageSizeOptions","showSizeChanger","TabPane","Tabs","setActiveTabKey","getDomainList","Fragment","defaultActiveKey","tab","activeKey","taskList","setTaskList","modifyModalVisible","setModifyModalVisible","waitModifyTask","setWaitModifyTask","reLoadAllTaskList","resp","showModifyModal","cronExpression","padding","defaultState","store","createStore","combineReducers","state","composeWithDevTools","Header","Layout","withRouter","setVisible","loginedUserName","logout","clear","userMenu","theme","top","position","display","preview","fontWeight","overlay","onVisibleChange","flag","ghost","DownOutlined","Content","Sider","routeList","current","setCurrent","isServerMode","toUpperCase","lastIndex","lastIndexOf","endsWith","substring","TccHeader","selectedKeys","defaultSelectedKeys","to","App","forceRefresh","path","component","Login","TccLayout","Welcome","Transaction","Task","from","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93153737.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\nimport {message} from \"antd\";\n\n// create an axios instance\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_ENV === 'test' ? \"http://localhost:22332\" : \"\",\n  timeout: 20000 // request timeout\n})\n\nfunction goLogin() {\n  const url = window.location.href;\n  localStorage.removeItem('token');\n  const base_url = url.split('#')[0];\n  window.location.href = `${base_url}#/login`;\n}\n\n// request interceptor\nhttp.interceptors.request.use(\n  config => {\n    // console.log(\"http.interceptors.request\", config)\n\n    const {url} = config;\n    if (!url.includes('/api/user/login')) {\n      let tccToken = localStorage.getItem('tcc-token');\n      if (tccToken) {\n        config.headers['Authorization'] = tccToken\n      }\n    }\n    return config\n  },\n  error => {\n    throw new Error(error)\n    console.error('\"http.interceptors.request\"', error)\n    return Promise.reject(error)\n  }\n)\n\nconst RESPONSE_DEFAULT_ERROR_MESSAGE = '服务异常，请稍后再试!';\n\n\n// response interceptor\nhttp.interceptors.response.use(\n  response => {\n    console.log(\"http.interceptors.response\", response); // 验证完  删除 TODO\n    let errorMessage = null;\n    let businessResponse = response.data;\n    if (!response.status || response.status !== 200) {\n      errorMessage = RESPONSE_DEFAULT_ERROR_MESSAGE;\n    } else if (response.status === 401) {\n      errorMessage = '请先登录';\n    } else if (businessResponse.code && businessResponse.code !== 200 && businessResponse.code !== '200') {\n      errorMessage = businessResponse.code + '-' + businessResponse.message || 'Error'\n    }\n    if (errorMessage != null) {\n      message.error(errorMessage);\n      return Promise.reject(errorMessage)\n    } else {\n      return businessResponse.data\n    }\n  },\n  error => {\n    console.log('http.interceptors.response err', error) // for debug\n    if (error.response) {\n      const {data = {}, status} = error.response;\n      let errorMessage = `HTTP ERROR: ${status}`;\n      if (typeof data === 'string') {\n        errorMessage = data;\n      } else if (typeof data === 'object') {\n        errorMessage = data.message;\n      }\n\n      if (status === 401) {\n        goLogin();\n        message.error(\"请先登录\");\n      } else {\n        message.error(errorMessage);\n      }\n      return Promise.reject(error.response);\n    }\n    message.error(RESPONSE_DEFAULT_ERROR_MESSAGE)\n    return Promise.reject(error)\n  }\n)\n\nexport default http\n","import http from \"./http\";\n\nexport function getAllDomainKeys() {\n  return http.get('/tcc-transaction-dashboard/api/domain/allKeys')\n}\n\nexport function getAllDomains() {\n  return http.get('/tcc-transaction-dashboard/api/domain/all')\n}\n\nexport function domainCreate(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/domain/create\", {\n    ...params\n  });\n}\n\nexport function domainModify(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/domain/modify\", {\n    ...params\n  });\n}\n\nexport function domainDelete(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/domain/delete\", {\n    ...params\n  });\n}\n\nexport function domainAlertTest(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/domain/alertTest\", {\n    ...params\n  });\n}\n\nexport function getManageList({\n                                domain,\n                                xidString,\n                                offset,\n                                pageSize, deleted\n                              }) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/list\", {\n    domain,\n    xidString,\n    offset,\n    pageSize,\n    markDeleted: deleted\n  })\n}\n\nexport function detail({\n                        domain,\n                        xidString\n                              }) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/detail\", {\n    domain,\n    xidString\n  })\n}\n\nexport function confirm(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/confirm\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\nexport function reset(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/reset\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\nexport function cancel(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/cancel\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\nexport function remove(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/markDeleted\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\nexport function restore(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/restore\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\nexport function transactionDelete(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/transaction/delete\", {\n    domain: params.domain,\n    xidString: params.xidString\n  });\n}\n\n\nexport function getAllTask() {\n  return http.get('/tcc-transaction-dashboard/api/task/all');\n}\n\nexport function taskPause(domain) {\n  return http.get('/tcc-transaction-dashboard/api/task/pause/' + domain);\n}\n\nexport function taskResume(domain) {\n  return http.get('/tcc-transaction-dashboard/api/task/resume/' + domain);\n}\n\nexport function taskDelete(domain) {\n  return http.get('/tcc-transaction-dashboard/api/task/delete/' + domain);\n}\n\nexport function taskModifyCron(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/task/modifyCron\",\n    {\n      domain: params.domain,\n      cronExpression: params.cronExpression\n    });\n}\n\n\nexport function userLogin(params) {\n  return http.post(\"/tcc-transaction-dashboard/api/user/login\", {\n    ...params\n  });\n}\n","import React, {useState} from 'react';\nimport {Button, Card, Form, Input, Spin} from 'antd';\nimport {userLogin} from \"../../../common/api\";\nimport {LockOutlined, UserOutlined} from '@ant-design/icons';\n\n\nconst Page = (props) => {\n  // const {history} = props;\n  const {history} = props;\n  const [loginLoading, setLoginLoading] = useState(false);\n\n\n  const [form] = Form.useForm();  //form实例\n\n  const handleSubmit = async () => {\n    const values = await form.validateFields();\n    setLoginLoading(true)\n    userLogin(values).then(res => {\n      localStorage.setItem('tcc-token', res.token);\n      localStorage.setItem('username', res.username);\n      localStorage.setItem('connectionMode', res.connectionMode);\n      history.push('/welcome');\n      setLoginLoading(false);\n    }).catch(res => {\n      setLoginLoading(false);\n    });\n  }\n\n  return (\n    <div className=\"login-container\">\n      <Spin spinning={loginLoading} size=\"large\" delay={500}>\n        <Card title=\"TCC管理后台\" style={{width: 500, margin: '15rem auto'}} hoverable>\n          <Form\n            name=\"basic\"\n            form={form}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              name=\"username\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入用户名!',\n                },\n              ]}\n            >\n              <Input size=\"large\" placeholder=\"用户名\" prefix={<UserOutlined/>}/>\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: '请输入密码!',\n                },\n              ]}\n            >\n              <Input.Password size=\"large\" placeholder=\"密码\" prefix={<LockOutlined/>}/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit} block>\n                登录\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Spin>\n    </div>\n  );\n};\n\nexport default Page;\n","import React from 'react';\n\nconst page = () => {\n  return (\n    <div style={{margin: '15rem 22rem'}}>\n      <h1 style={{fontSize: '30px'}}>欢迎来到TCC管理后台</h1>\n    </div>\n  )\n}\n\n\nexport default page;\n","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Input, message, Modal, Popconfirm, Row, Select, Space, Table, Tooltip} from \"antd\";\nimport {domainAlertTest, domainCreate, domainDelete, domainModify, getAllDomains} from \"../../../common/api\";\n\nconst {Option} = Select;\n\n\nconst Page = (props) => {\n  const [domainList, setDomainList] = useState([]);\n  const [loadingStatus, setLoadingStatus] = useState(false); //加载数据\n  const [addDomainModalVisible, setAddDomainModalVisible] = useState(false);\n  const [modifyDomainModalVisible, setModifyDomainModalVisible] = useState(false);\n  const [waitModifyDomain, setWaitModifyDomain] = useState(false);\n  const [form] = Form.useForm();  //form实例\n  const [modifyForm] = Form.useForm();  //form实例\n\n  const showRender = (text, record) => {\n    if (text && text.length > 20) {\n      let shortText = String(text).substr(0, 20).concat(\"...\");\n      return (\n        <div>\n          <Tooltip placement=\"top\" title={text}>\n            <Button>{shortText}</Button>\n          </Tooltip>\n        </div>\n      );\n    }\n    return text;\n  };\n\n  const columns = [\n    {\n      title: 'domain',\n      key: 'domain',\n      dataIndex: 'domain',\n      width: 150\n    },\n    {\n      title: '恢复任务最大重试次数',\n      key: 'maxRetryCount',\n      dataIndex: 'maxRetryCount',\n      width: 150\n    },\n    {\n      title: '恢复任务最大TPS',\n      key: 'maxRecoveryRequestPerSecond',\n      dataIndex: 'maxRecoveryRequestPerSecond',\n      width: 150\n    },\n    {\n      title: '手机号',\n      key: 'phoneNumbers',\n      dataIndex: 'phoneNumbers',\n      width: 200,\n      render: showRender\n    },\n    {\n      title: '告警类型',\n      key: 'alertType',\n      dataIndex: 'alertType',\n      width: 100,\n      render: (text, record) => {\n        if (text === 'DING') {\n          return '钉钉';\n        }\n        if (text === 'SMS') {\n          return '短信';\n        }\n        if (text === 'PHONE') {\n          return '电话';\n        }\n        return 'UNKONW'\n      }\n    },\n    {\n      title: '告警阈值',\n      key: 'threshold',\n      dataIndex: 'threshold',\n      width: 100\n    },\n    {\n      title: '告警间隔(分钟)',\n      key: 'intervalMinutes',\n      dataIndex: 'intervalMinutes',\n      width: 100\n    },\n    {\n      title: '上次告警时间',\n      key: 'lastAlertTime',\n      dataIndex: 'lastAlertTime',\n      width: 100\n    },\n    {\n      title: '钉钉机器人',\n      key: 'dingRobotUrl',\n      dataIndex: 'dingRobotUrl',\n      width: 250,\n      render: showRender\n    },\n    {\n      title: '创建时间',\n      key: 'createTime',\n      dataIndex: 'createTime',\n      width: 150\n    },\n    {\n      title: '修改时间',\n      key: 'lastUpdateTime',\n      dataIndex: 'lastUpdateTime',\n      width: 150\n    },\n    {\n      title: '版本号',\n      key: 'version',\n      dataIndex: 'version',\n      width: 80\n    },\n    {\n      title: '操作',\n      key: 'operation',\n      fixed: 'right',\n      width: 180,\n      render: (text, record) => (\n        <Space>\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              showModifyDomainModal(record)\n            }}>\n            修改\n          </Button>\n          <Popconfirm\n            title=\"是否执行\"\n            onConfirm={() => {\n              alertTest(record)\n            }}\n            okText=\"是\"\n            cancelText=\"否\">\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              style={{backgroundColor: '#faad14', borderColor: '#faad14'}}\n              danger>告警测试</Button>\n          </Popconfirm>\n          <Popconfirm\n            title=\"是否删除\"\n            onConfirm={() => {\n              doDeleteDomain(record)\n            }}\n            okText=\"是\"\n            cancelText=\"否\">\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              danger>删除</Button>\n          </Popconfirm>\n        </Space>\n      ),\n    }\n  ];\n\n  useEffect(() => {\n    reLoadDomainList();\n  }, []);\n\n  useEffect(() => {\n    modifyForm.resetFields();\n  }, [waitModifyDomain]);\n\n  const reLoadDomainList = () => {\n    setLoadingStatus(true);\n    getAllDomains().then(data => {\n      setLoadingStatus(false);\n      setDomainList(data);\n    }).catch((res) => {\n      setLoadingStatus(false);\n    });\n  }\n\n  const doAddDomainCancel = () => {\n    setAddDomainModalVisible(false);\n  }\n  const doAddDomainConfirm = async () => {\n    const values = await form.validateFields();\n    domainCreate(values).then(res => {\n      setAddDomainModalVisible(false);\n      reLoadDomainList();\n    }).catch((res) => {\n    });\n  }\n\n  const showAddDomainModel = () => {\n    setAddDomainModalVisible(true)\n  }\n\n  const showModifyDomainModal = (record) => {\n    setModifyDomainModalVisible(true)\n    setWaitModifyDomain({\n      ...record\n    });\n  }\n\n  const doModifyDomainCancel = () => {\n    setModifyDomainModalVisible(false);\n  }\n  const doModifyDomainConfirm = async () => {\n    const values = await modifyForm.validateFields();\n    domainModify(values).then(res => {\n      setModifyDomainModalVisible(false);\n      reLoadDomainList();\n    })\n  }\n\n  const doDeleteDomain = (record) => {\n    domainDelete(record).then(res => {\n      reLoadDomainList();\n    })\n  }\n\n  const alertTest = (record) => {\n    domainAlertTest(record).then(res => {\n      message.info(\"告警测试成功！\")\n    })\n  }\n\n  return (\n    <>\n      <Row style={{paddingBottom: '12px', paddingRight: '12px'}}>\n        <Col span={1}>\n          <Button style={{backgroundColor: '#faad14', borderColor: '#faad14'}}\n                  type=\"primary\"\n                  size=\"small\"\n                  danger\n                  onClick={() => showAddDomainModel()}>\n            新增\n          </Button>\n        </Col>\n        <Col span={22}>\n          &nbsp;\n        </Col>\n        <Col span={1}>\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => reLoadDomainList()}>\n            刷新\n          </Button>\n        </Col>\n      </Row>\n      <Table rowKey={record => record.domain}\n             columns={columns}\n             loading={loadingStatus}\n             dataSource={domainList}\n             scroll={{x: 2000, y: 800}}/>\n\n      <Modal title=\"新增Domain\" visible={addDomainModalVisible}\n             getContainer={false}\n             forceRender\n             closable={false}\n             footer={[\n               <Button key=\"cancel\" onClick={doAddDomainCancel}>取消</Button>,\n               <Button key=\"submit\" type=\"primary\" onClick={doAddDomainConfirm}>确认</Button>\n             ]}\n      >\n        <Form\n          name=\"basic\"\n          form={form}\n          labelCol={{span: 8}}\n          wrapperCol={{span: 16}}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"domain\"\n            name=\"domain\"\n            rules={[{required: true, message: '请输入domain'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"恢复任务最大重试次数\"\n            name=\"maxRetryCount\"\n            initialValue={3}\n            rules={[{required: true, message: '请输入恢复任务最大重试次数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"恢复任务最大TPS\"\n            initialValue={100}\n            name=\"maxRecoveryRequestPerSecond\"\n            rules={[{required: true, message: '请输入恢复任务最大TPS'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"手机号列表\"\n            name=\"phoneNumbers\"\n            rules={[{\n              pattern: \"[1-9][0-9]{10}(,[1-9][0-9]{10}){0,20}$\",\n              message: '手机号列表格式有误，形如：12345678901,12345678902'\n            }]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"告警类型\"\n            initialValue={'DING'}\n            name=\"alertType\"\n            rules={[{required: true, message: '告警类型必填'}]}>\n            <Select\n              style={{\n                width: 80,\n                margin: '0 8px',\n              }}\n            >\n              <Option value=\"DING\">钉钉</Option>\n              <Option value=\"SMS\" disabled>短信</Option>\n              <Option value=\"PHONE\" disabled>电话</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"告警阈值\"\n            name=\"threshold\"\n            rules={[{pattern: \"[0-9]+\", message: '必须为整数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"告警间隔(分钟)\"\n            name=\"intervalMinutes\"\n            rules={[{pattern: \"[0-9]+\", message: '必须为整数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"钉钉机器人地址\"\n            name=\"dingRobotUrl\">\n            <Input/>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Modal title=\"修改Domain\" visible={modifyDomainModalVisible}\n             getContainer={false}\n             forceRender\n             closable={false}\n             footer={[\n               <Button key=\"cancel\" onClick={doModifyDomainCancel}>取消</Button>,\n               <Button key=\"submit\" type=\"primary\" onClick={doModifyDomainConfirm}>确认</Button>\n             ]}\n      >\n        <Form\n          name=\"basic\"\n          form={modifyForm}\n          labelCol={{span: 8}}\n          wrapperCol={{span: 16}}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"domain\"\n            name=\"domain\"\n            initialValue={waitModifyDomain.domain}\n            rules={[{required: true, message: '请输入domain'}]}>\n            <Input disabled/>\n          </Form.Item>\n          <Form.Item\n            label=\"恢复任务最大重试次数\"\n            name=\"maxRetryCount\"\n            initialValue={waitModifyDomain.maxRetryCount}\n            rules={[{required: true, message: '请输入恢复任务最大重试次数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"恢复任务最大TPS\"\n            name=\"maxRecoveryRequestPerSecond\"\n            initialValue={waitModifyDomain.maxRecoveryRequestPerSecond}\n            rules={[{required: true, message: '请输入恢复任务最大TPS'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"手机号列表\"\n            initialValue={waitModifyDomain.phoneNumbers}\n            name=\"phoneNumbers\"\n            rules={[{\n              pattern: \"[1-9][0-9]{10}(,[1-9][0-9]{10}){0,20}$\",\n              message: '手机号列表格式有误，形如：12345678901,12345678902'\n            }]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"告警类型\"\n            initialValue={waitModifyDomain.alertType}\n            name=\"alertType\"\n            rules={[{required: true, message: '告警类型必填'}]}>\n            <Select\n              style={{\n                width: 80,\n                margin: '0 8px',\n              }}\n            >\n              <Option value=\"DING\">钉钉</Option>\n              <Option value=\"SMS\" disabled>短信</Option>\n              <Option value=\"PHONE\" disabled>电话</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"告警阈值\"\n            initialValue={String(waitModifyDomain.threshold)}\n            name=\"threshold\"\n            rules={[{pattern: \"[0-9]+\", message: '必须为整数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"告警间隔(分钟)\"\n            initialValue={String(waitModifyDomain.intervalMinutes)}\n            name=\"intervalMinutes\"\n            rules={[{pattern: \"[0-9]+\", message: '必须为整数'}]}>\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"钉钉机器人地址\"\n            initialValue={waitModifyDomain.dingRobotUrl}\n            name=\"dingRobotUrl\">\n            <Input/>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  )\n}\nexport default Page;\n","// export enum Domain {\n//   UPDATE_DOMAIN_DATA = 'UPDATE_DOMAIN_DATA',\n//   UPDATE_CURRENT_DOMAIN = 'UPDATE_CURRENT_DOMAIN',\n// }\n\nexport const Domain = {\n  UPDATE_DOMAIN_DATA: 'UPDATE_DOMAIN_DATA',\n  UPDATE_CURRENT_DOMAIN: 'UPDATE_CURRENT_DOMAIN',\n};\n","import React from 'react';\nimport {Button, Form, Input, Select} from 'antd';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Domain} from '../../../store/actions/domain';\n\nconst SearchBox = (props) => {\n  const {domainData} = useSelector(({domain}) => domain);\n  const dispatch = useDispatch();\n  const onSearch = (values) => {\n    dispatch({type: Domain.UPDATE_CURRENT_DOMAIN, payload: values});\n  };\n  return (\n    <div className=\"search-panel\" style={{margin: '30px 0'}}>\n      <Form layout=\"inline\" onFinish={onSearch}>\n        <Form.Item\n          label=\"domain\"\n          name=\"domain\"\n          initialValue={props.domain}\n          rules={[\n            {\n              required: true,\n              message: '请输入',\n            },\n          ]}\n        >\n          <Select\n            style={{width: 400}}\n            placeholder=\"请选择\"\n            showSearch>\n            {domainData.map((val, idx) => {\n              return (\n                <Select.Option key={idx} value={val}>{val}</Select.Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"xid\"\n          name=\"xidString\"\n        >\n          <Input allowClear style={{width: 400}}/>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            查询\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport {Button, message} from 'antd';\n\n// createTime: \"2022-05-18T01:09:22.000+0000\"\nconst dateRender = (text, record) => {\n  if (text) {\n    let arr = String(text).split(\".\")\n    return arr[0];\n  }\n  return text;\n};\nconst xidRender = (text, record) => {\n  let newText = text;\n  if (text && text.length > 40) {\n    newText = String(text).substr(0, 40).concat(\"...\");\n  }\n  return (\n    <div>\n      {newText}\n      <Button\n        className=\"button\"\n        size=\"small\"\n        type=\"primary\"\n        style={{backgroundColor: '#03cee0', borderColor: '#03cee0'}}\n        onClick={() => {\n          let oInput = document.createElement('input')\n          oInput.value = text;\n          document.body.appendChild(oInput)\n          oInput.select() // 选择对象\n          document.execCommand(\"Copy\") // 执行浏览器复制命令\n          message.success('复制成功');\n          oInput.remove()\n        }}>\n        复制\n      </Button>\n    </div>\n  );\n};\nexport const columns = [\n  {\n    title: 'domain',\n    dataIndex: 'domain',\n    key: 'domain',\n    width: 150\n  },\n  {\n    title: 'xid',\n    dataIndex: 'xidString',\n    key: 'xidString',\n    width: 200,\n    render: xidRender\n  },\n  {\n    title: 'rootDomain',\n    dataIndex: 'rootDomain',\n    key: 'rootDomain',\n    width: 150\n  },\n  {\n    title: 'rootXid',\n    dataIndex: 'rootXidString',\n    key: 'rootXidString',\n    width: 200,\n    render: xidRender\n  },\n  {\n    title: '状态',\n    dataIndex: 'statusId',\n    key: 'status',\n    width: 120,\n    render: (text, record) => {\n      if (text === 1) {\n        return 'TRYING';\n      }\n      if (text === 2) {\n        return 'CONFIRMING';\n      }\n      if (text === 3) {\n        return 'CANCELLING';\n      }\n      if (text === 11) {\n        return 'TRY_SUCCESS';\n      }\n      if (text === 12) {\n        return 'TRY_FAILED';\n      }\n      return 'UNKONW'\n    }\n  },\n  {\n    title: '事件类型',\n    dataIndex: 'transactionTypeId',\n    key: 'transactionType',\n    width: 100,\n    render: (text, record) => {\n      if (text === 1) {\n        return 'ROOT';\n      }\n      if (text === 2) {\n        return 'BRANCH';\n      }\n      return 'UNKONW'\n    }\n  },\n  {\n    title: '已重试数',\n    dataIndex: 'retriedCount',\n    key: 'retriedCount',\n    width: 120\n  },\n  {\n    title: '创建时间',\n    dataIndex: 'createTime',\n    key: 'createTime',\n    width: 180,\n    render: dateRender\n  },\n  {\n    title: '修改时间',\n    dataIndex: 'lastUpdateTime',\n    key: 'lastUpdateTime',\n    width: 180,\n    render: dateRender\n  },\n  {\n    title: '版本号',\n    dataIndex: 'version',\n    key: 'version',\n    width: 80\n  },\n];\n","import React, {useEffect, useState} from 'react';\nimport {Button, Card, message, Modal, Popconfirm, Space, Table, Tag} from 'antd';\nimport {columns} from '../../../common/constants';\nimport {useSelector} from 'react-redux';\nimport * as api from '../../../common/api';\nimport ReactJson from \"react-json-view\";\nimport {InfoCircleOutlined} from '@ant-design/icons';\n\n\nconst TableCard = (props) => {\n  const {activeTabKey} = props;\n  const deleted = activeTabKey === 'deletedKeys';\n  const {currentDomain: domain, xidString, refresh} = useSelector(({domain}) => domain);\n  const [datasource, setdatasource] = useState([]); //列表数据\n  const [total, setTotal] = useState(0); //总数\n  const [loadingStatus, setloadingStatus] = useState(false); //加载数据\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const onSelectChange = (selectedRowKeys, selectedRows) => {\n    console.log('selectedRows changed: ', selectedRows);\n    setSelectedRows(selectedRows);\n    setSelectedRowKeys(selectedRowKeys);\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: onSelectChange,\n  };\n  // 一次获取1000条，再是前端分页\n  const fetchNum = 1000;\n  const initPagination = {\n    offset: null,\n    pageSize: fetchNum,\n    forward: true\n  };\n  const pagination = {\n    ...initPagination\n  };\n\n  const pageInit = () => {\n    setdatasource([])\n    setSelectedRows([])\n    setSelectedRowKeys([])\n    getListData(initPagination);\n  }\n  //获取列表数据\n  const getListData = (pagination) => {\n    if (!domain) {\n      return;\n    }\n    setloadingStatus(true);\n    let data = {\n      domain,\n      xidString,\n      offset: pagination.offset,\n      pageSize: pagination.pageSize,\n      deleted,\n    };\n    api\n      .getManageList(data)\n      .then((res) => {\n        setloadingStatus(false);\n        setdatasource(res.items);\n        setTotal(res.total);\n        if (res.items && res.items.length <= 0) {\n          message.success('没有数据了😁');\n        }\n      })\n      .catch((res) => {\n        setloadingStatus(false);\n      });\n  };\n\n  const reloadHandler = (promises) => {\n    promises\n      .then((resultList) => {// TODO 需要进行异常测试\n        let failCount = 0;\n        let sucCount = resultList.length;\n        if (failCount == 0) {\n          message.success('批量操作成功');\n        } else {\n          message.warn(\"批量操作：成功数(\" + sucCount + \"),失败数(\" + failCount + \")\")\n        }\n        if (sucCount > 0) {\n          pageInit()\n        }\n      })\n      .catch(e => {\n        message.error(e.message || '服务异常，请稍后再试');\n      });\n  };\n  useEffect(() => {\n    pageInit();\n  }, [refresh, activeTabKey]);\n\n\n  const batchHandle = (handle) => {\n    if (!selectedRows || selectedRows.length <= 0) {\n      message.warn(\"请至少选择一条事件\");\n      return;\n    }\n    let resultPromiseList = new Array();\n    for (let i = 0; i < selectedRows.length; i++) {\n      resultPromiseList.push(\n        handle({\n          ...selectedRows[i]\n        }));\n    }\n    reloadHandler(Promise.all(resultPromiseList));\n  };\n\n  const openTransactionDetail = (record) => {\n    api.detail(record).then(res => {\n      let detailContent;\n      let isJsonParseSuccess = true;\n      try {\n        console.log(\"contentFormat\", res);\n        detailContent = JSON.parse(res.content)\n      } catch (e) {\n        detailContent = [res.content];\n        isJsonParseSuccess = false;\n      }\n\n      Modal.info({\n        icon: isJsonParseSuccess === true ? <InfoCircleOutlined/> :\n          <InfoCircleOutlined style={{color: 'red'}}/>,\n        content:\n          <>\n            {\n              isJsonParseSuccess === true ? <p></p> : <p style={{color: 'red'}}>事件详情解析异常，降级为base64展示，可复制内容去源服务进行人工解析</p>\n            }\n            <ReactJson collapseStringsAfterLength={100} src={detailContent}/>\n          </>\n        ,\n        width: '90%',\n      });\n    })\n\n  }\n\n  return (\n    <Card>\n      {\n        deleted ?\n          <Space size=\"small\" style={{float: \"left\", marginBottom: '1rem'}}>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.restore)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                style={{backgroundColor: '#faad14', borderColor: '#faad14'}}>恢复</Button>\n            </Popconfirm>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.transactionDelete)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                danger>彻底删除</Button>\n            </Popconfirm>\n          </Space>\n          :\n          <Space size=\"small\" style={{float: \"left\", marginBottom: '1rem'}}>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.confirm)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                style={{backgroundColor: '#faad14', borderColor: '#faad14'}}>确认</Button>\n            </Popconfirm>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.cancel)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                style={{backgroundColor: '#faad14', borderColor: '#faad14'}}>取消</Button>\n            </Popconfirm>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.reset)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                style={{backgroundColor: '#faad14', borderColor: '#faad14'}}>重置</Button>\n            </Popconfirm>\n            <Popconfirm\n              title=\"是否执行\"\n              onConfirm={() => batchHandle(api.remove)}\n              okText=\"是\"\n              cancelText=\"否\">\n              <Button\n                size=\"small\"\n                type=\"primary\"\n                danger>删除</Button>\n            </Popconfirm>\n          </Space>\n      }\n\n      <Space size=\"small\" style={{float: \"right\"}}>\n        <Tag color=\"#f50\">总数:{total > fetchNum ? total + ', 仅显示' + fetchNum + '条' : total}</Tag>\n      </Space>\n      <Table\n        rowKey={record => record.xidString}\n        rowSelection={rowSelection}\n        columns={columns.concat({\n          title: '事件详情',\n          key: 'detail',\n          fixed: 'right',\n          width: 80,\n          render: (text, record) => (\n            <Space>\n              <Button\n                className=\"button\"\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                  openTransactionDetail(record)\n                }}\n              >\n                详情\n              </Button>\n            </Space>\n          ),\n        })\n        }\n        dataSource={datasource}\n        size=\"small\"\n        bordered\n        loading={loadingStatus}\n        pagination={{\n          defaultPageSize: 10,\n          pageSizeOptions: [10,50,100,200,500,1000],\n          showSizeChanger: true,\n        }}\n        scroll={{x: 1500, y: 800}}\n      />\n    </Card>\n  );\n};\n\nexport default TableCard;\n","import React, {useEffect, useState} from 'react';\nimport {Tabs} from 'antd';\nimport * as api from '../../../common/api';\nimport SearchBox from './SearchBox';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Domain} from '../../../store/actions/domain';\nimport TableCard from './TableCard';\n\nconst {TabPane} = Tabs;\n\nconst Page = () => {\n  const [activeTabKey, setActiveTabKey] = useState('normal');\n  const {currentDomain: domain, domainData} = useSelector(({domain}) => domain);\n  const dispatch = useDispatch();\n\n  //获取domain数据\n  const getDomainList = () => {\n    api.getAllDomainKeys().then((res) => {\n      dispatch({type: Domain.UPDATE_DOMAIN_DATA, payload: res});\n    });\n  };\n\n  useEffect(() => {\n    getDomainList();\n  }, []);\n\n  const onTabChange = (tab) => {\n    console.log(\"tabPane onTabChange\", tab, domain)\n    setActiveTabKey(tab);\n  };\n\n  return (\n    <React.Fragment>\n      <SearchBox domain={domain}/>\n      <div className=\"content\">\n        <Tabs\n          defaultActiveKey=\"normal\"\n          onChange={onTabChange}\n          activeKey={activeTabKey}\n        >\n          <TabPane tab=\"Normal\" key=\"normal\"/>\n          <TabPane tab=\"Deleted Keys\" key=\"deletedKeys\"/>\n        </Tabs>\n        <TableCard key={domain} activeTabKey={activeTabKey}/>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Page;\n","import React, {useEffect, useState} from 'react';\nimport {getAllTask, taskModifyCron, taskPause, taskResume} from '../../../common/api';\nimport {Button, Col, Form, Input, message, Modal, Popconfirm, Row, Space, Table} from 'antd';\n\n\nconst Page = () => {\n  const [taskList, setTaskList] = useState([]);\n  const [loadingStatus, setloadingStatus] = useState(false); //加载数据\n  const [modifyModalVisible, setModifyModalVisible] = useState(false);\n  const [waitModifyTask, setWaitModifyTask] = useState({});\n  const [form] = Form.useForm();  //form实例\n\n  useEffect(() => {\n    reLoadAllTaskList();\n  }, []);\n  useEffect(() => {\n    form.resetFields();\n  }, [waitModifyTask]);\n\n  const reLoadAllTaskList = () => {\n    setloadingStatus(true);\n    getAllTask().then(data => {\n      setloadingStatus(false);\n      setTaskList(data);\n    }).catch((res) => {\n      setloadingStatus(false);\n    });\n  }\n  const columns = [\n    {\n      title: 'domain',\n      dataIndex: 'domain',\n      key: 'domain',\n    },\n    {\n      title: 'job组',\n      dataIndex: 'jobGroup',\n      key: 'jobGroup',\n    },\n    {\n      title: 'job名称',\n      dataIndex: 'jobName',\n      key: 'jobName',\n    },\n    {\n      title: 'cron表达式',\n      dataIndex: 'cronExpression',\n      key: 'cronExpression',\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n      title: '操作',\n      key: 'operation',\n      render: (text, record) => (\n        <Space>\n          {\n            record.status === 'NORMAL' ?\n              <Popconfirm\n                title=\"是否执行\"\n                onConfirm={() => {\n                  taskPause(record.domain).then(resp => {\n                    reLoadAllTaskList()\n                  })\n                }}\n                okText=\"是\"\n                cancelText=\"否\">\n                <Button\n                  size=\"small\"\n                  type=\"primary\"\n                  danger>停止</Button>\n              </Popconfirm>\n              : <></>\n          }\n          {\n            record.status !== 'NORMAL' ?\n              <Popconfirm\n                title=\"是否执行\"\n                onConfirm={() => {\n                  taskResume(record.domain).then(resp => {\n                    reLoadAllTaskList()\n                  })\n                }}\n                okText=\"是\"\n                cancelText=\"否\">\n                <Button\n                  size=\"small\"\n                  type=\"primary\"\n                  style={{backgroundColor: '#faad14', borderColor: '#faad14'}}>恢复</Button>\n              </Popconfirm>\n              : <></>\n          }\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              showModifyModal(record)\n            }}>\n            修改\n          </Button>\n          {/*<Popconfirm*/}\n          {/*  title=\"是否执行\"*/}\n          {/*  onConfirm={() => {*/}\n          {/*    taskDelete(record.domain).then(resp => {*/}\n          {/*      reLoadAllTaskList()*/}\n          {/*    })*/}\n          {/*  }}*/}\n          {/*  okText=\"是\"*/}\n          {/*  cancelText=\"否\">*/}\n          {/*  <Button*/}\n          {/*    size=\"small\"*/}\n          {/*    type=\"primary\"*/}\n          {/*    danger>*/}\n          {/*    删除*/}\n          {/*  </Button>*/}\n          {/*</Popconfirm>*/}\n\n        </Space>\n      ),\n    }\n  ];\n  const showModifyModal = (record) => {\n    setWaitModifyTask({\n      ...record\n    })\n    setModifyModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setModifyModalVisible(false);\n  };\n\n\n  const onFinish = async () => {\n    const values = await form.validateFields();\n    taskModifyCron(values).then(res => {\n      setModifyModalVisible(false);\n      reLoadAllTaskList();\n    }).catch((res) => {\n    });\n  };\n  return (\n    <div>\n\n      <Row style={{padding: '12px'}}>\n        <Col span={23}>\n          &nbsp;\n        </Col>\n        <Col span={1}>\n          <Button type=\"primary\"\n                  size=\"small\"\n                  onClick={() => reLoadAllTaskList()}>\n            刷新\n          </Button>\n        </Col>\n      </Row>\n      <Table rowKey={record => record.domain}\n             dataSource={taskList}\n             columns={columns}\n             pagination={false}\n             loading={loadingStatus}/>\n      <Modal title=\"修改\" visible={modifyModalVisible}\n             getContainer={false}\n             forceRender\n             closable={false}\n             footer={[\n               <Button key=\"cancel\" onClick={handleCancel}>取消</Button>,\n               <Button key=\"submit\" type=\"primary\" onClick={onFinish}>确认</Button>\n             ]}\n      >\n        <Form\n          name=\"basic\"\n          form={form}\n          labelCol={{span: 6}}\n          wrapperCol={{span: 16}}\n          onFinish={onFinish}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"domain\"\n            name=\"domain\"\n            initialValue={waitModifyTask.domain}>\n            <Input disabled/>\n          </Form.Item>\n          <Form.Item\n            label=\"cron表达式\"\n            name=\"cronExpression\"\n            initialValue={waitModifyTask.cronExpression}\n            rules={[{required: true, message: '请输入cronExpression'}]}>\n            <Input/>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Page;\n","import {Domain} from '../actions/domain';\n// import {CommonAction} from 'app-common';\n\n// export interface DomainState {\n//   domainData: any;\n//   currentDomain: string;\n// }\n\nconst defaultState = {\n  domainData: [],\n  currentDomain: '',\n  xidString: null,\n  refresh: 0,\n};\n\nexport default function domain(state = defaultState, {type, payload}) {\n  switch (type) {\n    case Domain.UPDATE_DOMAIN_DATA:\n      return {...state, domainData: payload};\n    case Domain.UPDATE_CURRENT_DOMAIN:\n      // console.log(\"UPDATE_CURRENT_DOMAIN\", state);\n      return {...state, currentDomain: payload.domain, xidString: payload.xidString, refresh: state.refresh + 1};\n    default:\n      return state;\n  }\n}\n","import {combineReducers, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport domain from './reducers/domain';\n\nconst store = createStore(\n  combineReducers({domain}),\n  composeWithDevTools(),\n);\n\nexport default store;\n","import {Button, Dropdown, Image, Layout, Menu, Space} from \"antd\";\nimport {DownOutlined} from \"@ant-design/icons\";\nimport React, {useState} from \"react\";\nimport {withRouter} from \"react-router-dom\";\n\nconst {Header} = Layout;\n\n\nconst Page = (props) => {\n  const {history} = props;\n  const [visible, setVisible] = useState(false);\n  const loginedUserName = localStorage.getItem(\"username\");\n\n  const handleMenuClick = (e) => {\n    if (e.key === 'logout') {\n      logout();\n    }\n    setVisible(false);\n\n  };\n\n  const handleVisibleChange = (flag) => {\n    setVisible(flag);\n  };\n\n  const logout = () => {\n    localStorage.clear();\n    history.push('/login');\n  };\n\n  const userMenu = (\n    <Menu onClick={handleMenuClick} theme=\"dark\">\n      <Menu.Item key='logout'>登出</Menu.Item>\n    </Menu>\n  );\n\n  const toLogin = () => {\n    console.log(\"toLogin\")\n    history.push('/login');\n  }\n\n  return (\n    <Header\n      style={{\n        backgroundColor: '#001529',\n        padding: '0px',\n      }}\n    >\n      <span style={{top: '0.6rem', position: 'relative', display: 'inline-block'}}>\n        <Image\n          width={30}\n          preview={false}\n          src=\"logo192.png\"\n        />\n      </span>\n      <span style={{color: '#fff', fontSize: 18, fontWeight: 'bold',}}>TCC管理后台</span>\n      <span style={{float: 'right'}}>\n        {\n          !loginedUserName ?\n            <Button onClick={() => toLogin()}>登录</Button>\n            :\n            <Dropdown overlay={userMenu} onVisibleChange={handleVisibleChange} visible={visible}>\n              <Button type=\"primary\" danger ghost>\n                <Space>\n                  {loginedUserName}\n                  <DownOutlined/>\n                </Space>\n              </Button>\n            </Dropdown>\n        }\n      </span>\n    </Header>\n  )\n}\n\nexport default withRouter(Page);\n","import React, {useEffect, useState} from \"react\";\n\nimport TccHeader from \"./TccHeader\";\nimport {Layout, Menu} from \"antd\";\nimport {Link, withRouter} from \"react-router-dom\";\n\nconst {Content, Sider} = Layout;\n\n\nconst Page = (props) => {\n  const {history} = props;\n  const {routeList} = props;\n  const [current, setCurrent] = useState(null);\n  let connectionMode = localStorage.getItem('connectionMode');\n  const isServerMode = connectionMode && connectionMode.toUpperCase() === 'SERVER';\n  const onClick = e => {\n    setCurrent(e.key);\n  };\n  useEffect(() => {\n    let url = window.location.href;\n    console.log('app', url)\n    let lastIndex = url.lastIndexOf(\"/\");\n    let key = 'welcome';\n    if (!url.endsWith(\"/\")) {\n      key = url.substring(lastIndex + 1)\n    }\n    history.push('/' + key);\n    setCurrent(key);\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"layout\">\n        <TccHeader/>\n        <Layout>\n          <Sider>\n            <Menu\n              selectedKeys={[current]}\n              defaultSelectedKeys={['welcome']}\n              theme=\"dark\"\n              onClick={onClick}>\n              <Menu.Item key='welcome'>\n                <Link to=\"/welcome\">首页</Link>\n              </Menu.Item>\n              <Menu.Item key='domain'>\n                <Link to=\"/domain\">Domain管理</Link>\n              </Menu.Item>\n              <Menu.Item key='transaction'>\n                <Link to=\"/transaction\">事件管理</Link>\n              </Menu.Item>\n              {\n                isServerMode ?\n                  <Menu.Item key='task'>\n                    <Link to=\"/task\">任务管理</Link>\n                  </Menu.Item>\n                  :\n                  <></>\n              }\n            </Menu>\n          </Sider>\n          <Content>\n            <div className=\"site-layout-content\">\n              {routeList}\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    </>\n  );\n}\n\nexport default withRouter(Page);\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport Login from './pages/tcc/login/index';\nimport Welcome from './pages/tcc/welcome/index';\nimport Domain from './pages/tcc/domain/index';\nimport Transaction from './pages/tcc/transaction/index';\nimport Task from \"./pages/tcc/task/index\";\n\nimport store from './store';\nimport TccLayout from \"./layout/TccLayout\";\n\nfunction App(props) {\n  return (\n    <Provider store={store}>\n      <Router forceRefresh={false}>\n        <Switch>\n          <Route key=\"login\" path=\"/login\" component={Login}></Route>\n          <TccLayout routeList={\n            <>\n              <Route path=\"/welcome\" component={Welcome}></Route>\n              <Route path=\"/domain\" component={Domain}></Route>\n              <Route path=\"/transaction\" component={Transaction}></Route>\n              <Route path=\"/task\" component={Task}></Route>\n            </>\n          }>\n          </TccLayout>\n          <Redirect to=\"/welcome\" from=\"/\"/>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}